<?xml version="1.0" encoding="UTF-8"?>
<class name="lobster" extends="Actor" extends-java="Actor" enable="true" strideversion="1">
    <javadoc xml:space="preserve"/>
    <imports>
        <import target="java.util.*" enable="true"/>
        <import target="greenfoot.*" enable="true"/>
    </imports>
    <implements/>
    <fields/>
    <constructors/>
    <methods>
        <method access="public" type="void" type-java="void" name="act" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <call expression="moveAround()" expression-java="moveAround()" enable="true"/>
                <call expression="eatCrab()" expression-java="eatCrab()" enable="true"/>
                <call expression="tranformWormtoLobster()" expression-java="tranformWormtoLobster()" enable="true"/>
                <call expression="orientationStart()" expression-java="orientationStart()" enable="true"/>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="orientationStart" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <if condition="Greenfoot.getRandomNumber(80)==1" condition-java="Greenfoot.getRandomNumber(80) == 1" enable="true">
                    <ifStatements>
                        <call expression="turn(Greenfoot.getRandomNumber(360))" expression-java="turn(Greenfoot.getRandomNumber(360))" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="moveAround" enable="true">
            <javadoc xml:space="preserve">Act - do whatever the lobster wants to do. This method is called whenever the 'Act' or 'Run' button gets pressed in the environment.</javadoc>
            <params/>
            <throws/>
            <body>
                <call expression="move(3)" expression-java="move(3)" enable="true"/>
                <if condition="Greenfoot.getRandomNumber(10)==1" condition-java="Greenfoot.getRandomNumber(10) == 1" enable="true">
                    <ifStatements>
                        <call expression="turn(Greenfoot.getRandomNumber(90)-45)" expression-java="turn(Greenfoot.getRandomNumber(90) - 45)" enable="true"/>
                    </ifStatements>
                </if>
                <if condition="isAtEdge()" condition-java="isAtEdge()" enable="true">
                    <ifStatements>
                        <call expression="turn(180)" expression-java="turn(180)" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="eatCrab" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <variable type="Actor" type-java="Actor" name="Crab" value="getOneIntersectingObject(Crab.class)" value-java="getOneIntersectingObject(Crab.class)" enable="true"/>
                <if condition="Crab!=null" condition-java="Crab != null" enable="true">
                    <ifStatements>
                        <variable type="World" type-java="World" name="world" value="getWorld()" value-java="getWorld()" enable="true"/>
                        <call expression="world.removeObject(Crab)" expression-java="world.removeObject(Crab)" enable="true"/>
                        <call expression="Greenfoot.playSound(&quot;trombone.mp3&quot;)" expression-java="Greenfoot.playSound(&quot;trombone.mp3&quot;)" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="tranformWormtoLobster" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <variable type="Actor" type-java="Actor" name="worm" value="getOneIntersectingObject(worm.class)" value-java="getOneIntersectingObject(worm.class)" enable="true"/>
                <if condition="worm!=null" condition-java="worm != null" enable="true">
                    <ifStatements>
                        <variable type="World" type-java="World" name="world" value="getWorld()" value-java="getWorld()" enable="true"/>
                        <variable type="int" type-java="int" name="x" value="worm.getX()" value-java="worm.getX()" enable="true"/>
                        <variable type="int" type-java="int" name="y" value="worm.getY()" value-java="worm.getY()" enable="true"/>
                        <call expression="world.removeObject(worm)" expression-java="world.removeObject(worm)" enable="true"/>
                        <variable type="lobster" type-java="lobster" name="lobster" value="new lobster()" value-java=" new lobster()" enable="true"/>
                        <call expression="world.addObject(lobster,x,y)" expression-java="world.addObject(lobster, x, y)" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
    </methods>
</class>
